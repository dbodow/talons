{"version":3,"sources":["webpack:///webpack/bootstrap 0e1b0b0172af335f9c38","webpack:///./util/util.js","webpack:///./node_modules/lodash/_Symbol.js","webpack:///./node_modules/lodash/toString.js","webpack:///./node_modules/lodash/_hasUnicode.js","webpack:///./src/organism.js","webpack:///./src/organisms_controller.js","webpack:///./src/main.js","webpack:///./src/simulation_params.js","webpack:///./src/sliders.js","webpack:///./node_modules/lodash/capitalize.js","webpack:///./node_modules/lodash/_baseToString.js","webpack:///./node_modules/lodash/_root.js","webpack:///./node_modules/lodash/_freeGlobal.js","webpack:///(webpack)/buildin/global.js","webpack:///./node_modules/lodash/_arrayMap.js","webpack:///./node_modules/lodash/isArray.js","webpack:///./node_modules/lodash/isSymbol.js","webpack:///./node_modules/lodash/_baseGetTag.js","webpack:///./node_modules/lodash/_getRawTag.js","webpack:///./node_modules/lodash/_objectToString.js","webpack:///./node_modules/lodash/isObjectLike.js","webpack:///./node_modules/lodash/upperFirst.js","webpack:///./node_modules/lodash/_createCaseFirst.js","webpack:///./node_modules/lodash/_castSlice.js","webpack:///./node_modules/lodash/_baseSlice.js","webpack:///./node_modules/lodash/_stringToArray.js","webpack:///./node_modules/lodash/_asciiToArray.js","webpack:///./node_modules/lodash/_unicodeToArray.js","webpack:///./src/simulation.js","webpack:///./src/panorama.js","webpack:///./src/background.js","webpack:///./src/zoo.js","webpack:///./src/predators_controller.js","webpack:///./src/predator.js","webpack:///./src/preys_controller.js","webpack:///./src/prey.js","webpack:///./src/field.js","webpack:///./src/graph.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;AAEA;AACA;;;;;;;;AC7DA;;AAEA;AACA;AACA;AAAA;AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;;AAEA;AACA;AACA;AAAA;AAAA;;AAEA;AACA;AACA;AACA;AAAA;AAAA;;AAEA,0BAAiC,KAAK;AACtC;AACA;AACA,CAAC;AAAA;AAAA;;AAED;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AAAA;AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;;AAEA;AACA;AACA;AAAA;AAAA;;;;;;;AClDA;;AAEA;AACA;;AAEA;;;;;;;ACLA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;AC3BA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;;AAEA;;;;;;;;;ACzBA;;AAGyC;;AAEzC;AACA,eAAe,iCAAiC;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,oBAAoB,cAAc;AAClC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,gBAAgB,cAAc;AAC9B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;;;;;;;;;;;ACvFA;AACA;AAEsB;;AAEtB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AAAA;AAAA;;;;;;;;;;;;AC/BA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,CAAC;;;;;;;;ACvCD;;AAEA;AACA,gCAAgC;AAChC;AACA;AACA;AACA;AACA,4BAA4B;AAC5B,4BAA4B;AAC5B,6BAA6B;AAC7B,sCAAsC;AACtC;AACA,oCAAoC;AACpC,iCAAiC,oBAAoB;AACrD,4CAA4C,OAAO;AACnD,wBAAwB;AACxB,wBAAwB;AACxB,yBAAyB;AACzB,kCAAkC;AAClC;AACA,4BAA4B,oBAAoB;AAChD,6BAA6B,sDAAsD;AACnF,wCAAwC;AACxC,oCAAoC;AACpC,2BAA2B,yCAAyC;AACpE;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;;;;;;;;;;ACzEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,4BAA4B,yCAAyC;AACrE;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;;;;;;;ACxIA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;ACtBA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;ACpCA;;AAEA;AACA;;AAEA;AACA;;AAEA;;;;;;;ACRA;AACA;;AAEA;;;;;;;;ACHA;;AAEA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;;AAEA;AACA;AACA,4CAA4C;;AAE5C;;;;;;;ACpBA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,SAAS;AACpB,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;ACzBA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;AC5BA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;AC3BA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;;;;;;;AC7CA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;;;;;;;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,aAAa,QAAQ;AACrB;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;AC5BA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;ACrBA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,SAAS;AACtB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;;;;;;AChCA;;AAEA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;ACjBA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,MAAM;AACnB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;AC9BA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;ACjBA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,MAAM;AACnB;AACA;AACA;AACA;;AAEA;;;;;;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,EAAE;AACjD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,MAAM;AACnB;AACA;AACA;AACA;;AAEA;;;;;;;;;;;ACvCA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC;AACvC;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;;;;;;;;;;AC1EA;;AAEA;AACmC;;AAEnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,sBAAsB,EAAE;AACxB;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,KAAK;AACL;;;AAGA;AAAA;AAAA;;;;;;;;AC3FA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,6BAA6B,oBAAoB;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AAAA;AAAA;;;;;;;;;;;AClCA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,mBAAmB,6BAA6B;AAChD;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;;;;;;;;;;;AC3FA;;AAEA;AACA;AAC0B;;AAE1B;AACA,eAAe,0CAA0C;AACzD;AACA;AACA,4BAA4B,sBAAsB;AAClD;;AAEA,qBAAqB,sBAAsB;AAC3C,mBAAmB,WAAW;AAC9B;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,yBAAyB,mCAAmC;AAC5D;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;;;;;;;;;ACxEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,wBAAwB,8BAA8B;AACtD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AAAA;AAAA;;;;;;;;;;;AC3BA;;AAEA;AACA;AAC0B;;AAE1B;AACA,eAAe,wDAAwD;AACvE;AACA;AACA;AACA;AACA,wBAAwB,kBAAkB;AAC1C;;AAEA,iBAAiB,kBAAkB;AACnC,mBAAmB,WAAW;AAC9B;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,qBAAqB,iDAAiD;AACtE;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AAAA;AAAA;;;;;;;;;AC9DA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,oBAAoB,MAAM;AAC1B;AACA;AACA;AAAA;AAAA;;;;;;;;;ACdA;;AAGoD;;AAEpD;AACA,eAAe,8BAA8B,GAAG,cAAc;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,mBAAmB,mBAAmB;AACtC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA,MAAM,KAAK;AACX,4CAA4C,gCAAgC;AAC5E,8CAA8C,gCAAgC;AAC9E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAM,KAAK;AACX;AACA;AACA;AACA;AACA,4CAA4C,gCAAgC;AAC5E,8CAA8C,gCAAgC;AAC9E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,qBAAqB,8BAA8B;AACnD;AACA;AACA;AACA;AAAA;AAAA;;;;;;;;;ACjGoB;;AAEpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,mBAAmB,iBAAiB;AACpC;AACA;AACA;AAAA;AAAA","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 6);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 0e1b0b0172af335f9c38","'use strict';\n\nexport const positiveMod = (n, m) => (\n  ((n % m) + m) % m\n);\n\n// computed the horizontal distance between two points\n// accounting for the panorama's wrapping\nexport const distanceX = (x1, x2, width) => {\n  const smaller = Math.min(x1, x2);\n  const larger = Math.max(x1, x2);\n  const innerDistance = larger - smaller;\n  const outerDistance = smaller + width - larger;\n  return Math.min(innerDistance, outerDistance);\n};\n\nexport const distanceY = (y1, y2) => {\n  return Math.abs(y2 - y1);\n};\n\nexport const distance = (x1, y1, x2, y2, width) => {\n  return Math.sqrt(Math.pow(distanceY(y1, y2), 2) +\n                   Math.pow(distanceX(x1, x2, width), 2));\n};\n\nexport const fieldCellCoords = ({x, y}, fieldNetSize) => ({\n  x: Math.floor(x / fieldNetSize),\n  y: Math.floor(y / fieldNetSize)\n});\n\nexport const gravitation = dist => {\n  if (dist === 0) {\n    // avoid singularities;\n    return 100;\n  } else {\n    return Math.pow(dist, -2);\n  }\n};\n\n// inspired by https://stackoverflow.com/questions/1114465/getting-mouse-location-in-canvas\nexport const getMousePos = (canvas, e) => {\n  const rect = canvas.getBoundingClientRect();\n  return {\n    x: e.clientX - rect.left,\n    y: e.clientY - rect.top\n  };\n};\n\nexport const fitToAxis = (value, valueMax, axisMax) => (\n  (value / valueMax) * axisMax\n);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./util/util.js\n// module id = 0\n// module chunks = 0","var root = require('./_root');\n\n/** Built-in value references. */\nvar Symbol = root.Symbol;\n\nmodule.exports = Symbol;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lodash/_Symbol.js\n// module id = 1\n// module chunks = 0","var baseToString = require('./_baseToString');\n\n/**\n * Converts `value` to a string. An empty string is returned for `null`\n * and `undefined` values. The sign of `-0` is preserved.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n * @example\n *\n * _.toString(null);\n * // => ''\n *\n * _.toString(-0);\n * // => '-0'\n *\n * _.toString([1, 2, 3]);\n * // => '1,2,3'\n */\nfunction toString(value) {\n  return value == null ? '' : baseToString(value);\n}\n\nmodule.exports = toString;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lodash/toString.js\n// module id = 2\n// module chunks = 0","/** Used to compose unicode character classes. */\nvar rsAstralRange = '\\\\ud800-\\\\udfff',\n    rsComboMarksRange = '\\\\u0300-\\\\u036f',\n    reComboHalfMarksRange = '\\\\ufe20-\\\\ufe2f',\n    rsComboSymbolsRange = '\\\\u20d0-\\\\u20ff',\n    rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,\n    rsVarRange = '\\\\ufe0e\\\\ufe0f';\n\n/** Used to compose unicode capture groups. */\nvar rsZWJ = '\\\\u200d';\n\n/** Used to detect strings with [zero-width joiners or code points from the astral planes](http://eev.ee/blog/2015/09/12/dark-corners-of-unicode/). */\nvar reHasUnicode = RegExp('[' + rsZWJ + rsAstralRange  + rsComboRange + rsVarRange + ']');\n\n/**\n * Checks if `string` contains Unicode symbols.\n *\n * @private\n * @param {string} string The string to inspect.\n * @returns {boolean} Returns `true` if a symbol is found, else `false`.\n */\nfunction hasUnicode(string) {\n  return reHasUnicode.test(string);\n}\n\nmodule.exports = hasUnicode;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lodash/_hasUnicode.js\n// module id = 3\n// module chunks = 0","'use strict';\n\nimport { positiveMod, fieldCellCoords, gravitation,\n         distance, distanceX, distanceY } from '../util/util';\n\nexport default class Organism {\n  constructor({speed, radius, color, perception}, panoramaSize) {\n    this.speed = speed;\n    this.radius = radius;\n    this.color = color;\n    this.perception = perception;\n    this.initializeCenter(panoramaSize);\n    this.initializeDirection();\n  }\n\n  // Choose a random spot on the display for the organism to be placed\n  initializeCenter({width, height}) {\n    this.center = {\n      x: Math.random() * width,\n      y: (Math.random() * (height - (2 * this.radius))) + this.radius\n    };\n  }\n\n  // Choose a random direction for the organism to move at its initialization\n  initializeDirection() {\n    // sample as an angle for a uniform radial distribution\n    // i.e. don't bias directions to the diagonals via a cartesian ransom sample\n    const radialDirection = Math.random() * 2 * Math.PI;\n    this.direction = {\n      x: Math.cos(radialDirection),\n      y: Math.sin(radialDirection)\n    };\n  }\n\n  // move the organism's position by one tick\n  moveOrganism({width, height}) {\n    this.center = {\n      x: positiveMod(this.center.x + this.dxdt(), width),\n      y: this.center.y + this.dydt()\n    };\n    this.resolveBounces(height);\n  }\n\n  // y-velocity\n  dydt() {\n    return this.speed * this.direction.y;\n  }\n\n  // x-velocity\n  dxdt() {\n    return this.speed * this.direction.x;\n  }\n\n  // minimum y-position the organism can fit on the display\n  minHeight() {\n    return this.radius;\n  }\n\n  // maximum y-position the organism can fit on the display\n  maxHeight(height) {\n    return height - this.radius;\n  }\n\n  // prevent rendering outside of the display and\n  // flip y-velocity to \"bounce\" off of the display's edge\n  resolveBounces(height) {\n    if (this.center.y > this.maxHeight(height)) {\n      const overflow = this.center.y - this.maxHeight(height);\n      this.center.y -= overflow;\n      this.direction.y = -1 * this.direction.y;\n    } else if (this.center.y < this.minHeight()) {\n      const underflow = this.minHeight() - this.center.y;\n      this.center.y += underflow;\n      this.direction.y = -1 * this.direction.y;\n    }\n  }\n\n  // change the direction the organism is moving based on\n  // the predator/prey interactions.\n  updateDirection(field) {\n    const gradient = field.constructGradient(this);\n    const totalSpeed = Math.sqrt( Math.pow(this.direction.x + (gradient.x / this.perception), 2) +\n                                  Math.pow(this.direction.y + (gradient.y / this.perception), 2) );\n    const normalization = 1 / totalSpeed;\n    this.direction.x = (this.direction.x + (gradient.x / this.perception)) * normalization;\n    this.direction.y = (this.direction.y + (gradient.y / this.perception)) * normalization;\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/organism.js\n// module id = 4\n// module chunks = 0","'use strict';\nimport capitalize from 'lodash/capitalize';\nimport { distance, distanceY, positiveMod,\n         gravitation } from '../util/util';\n\nexport default class OrganismsController {\n  constructor(reproductionPeriod) {\n    this.organisms = [];\n    this.lastReproduced = Date.now();\n    this.reproductionPeriod = reproductionPeriod;\n  }\n\n  moveOrganisms(panoramaSize, field) {\n    this.updateDirections(field);\n    this.organisms.forEach( organism => {\n      organism.moveOrganism(panoramaSize);\n    });\n  }\n\n  updateDirections(field) {\n    this.organisms.forEach( organism => {\n      organism.updateDirection(field);\n    });\n  }\n\n  killOrganisms(condemnedList) {\n    condemnedList.forEach( organism => {\n      const condemnedIdx = this.organisms.indexOf(organism);\n      this.organisms.splice(condemnedIdx, 1);\n    });\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/organisms_controller.js\n// module id = 5\n// module chunks = 0","'use strict';\n// This file manages interaction with the HTML document\n// and integrates the top-level systems of the simulation.\n\n// `SimulationParams` acts as a single source of truth for all parameters\n\n// `Sliders` controls the slider components on the webpage, allowing\n// users to change the simulation parameters as desired. Data flows from\n// `Sliders` to `SimulationParams`\n\n// `Simulation` runs the ecosystem model: it tracks the 'animals' and their\n// interactions, and measures population levels\n\nimport SimulationParams from './simulation_params';\nimport Sliders from './sliders';\nimport Simulation from './simulation';\n\nconst handleVisibilityChange = (simulation) => {\n  if (document.hidden) {\n    simulation.togglePlaying(false);\n  } else {\n    simulation.togglePlaying(true);\n  }\n};\n\ndocument.addEventListener(\"DOMContentLoaded\", function(event) {\n  const canvas = document.getElementById(\"canvas\");\n  const graph = document.getElementById(\"graph\");\n\n  const simulationParams = new SimulationParams;\n  const simulation = new Simulation(canvas, graph, simulationParams);\n  const sliders = new Sliders(simulation, simulationParams);\n\n  simulation.begin();\n\n  document.addEventListener(\n    \"visibilitychange\",\n    () => handleVisibilityChange(simulation)\n  );\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/main.js\n// module id = 6\n// module chunks = 0","'use strict';\n\n// SimulationParams: controls the parameters for the simulation.\n// Allows users to adjust input; manages event listeners to\n// determine this input.\nexport default class SimulationParams {\n  constructor() {\n    //set defaults\n    this.predatorCount = 20; // count at initialization or reset\n    this.predatorSpeed = 15; // pixels moved per tick\n    this.predatorRadius = 40; // radius of the graphical circle\n    this.predatorGravitationNbhd = 10; // px size of neighborhood to detect prey\n    this.predatorColor = '#354b6d';\n    this.predatorEfficiency = 10000; // milliseconds a predator can survive without feeding\n    this.predatorPerception = 25; // lower is better; this is a 1/x weight\n    this.predatorReproductionPeriod = 12000; // ms; should be longer than predator efficiency to avoid explosion\n    this.preyCount = 50; // count at initialization or reset\n    this.preySpeed = 10; // pixels moved per tick\n    this.preyRadius = 10; // radius of the graphical circle\n    this.preyGravitationNbhd = 20; // px size of neighborhood to detect predators\n    this.preyColor = '#efe092';\n    this.preyPerception = 7; // lower is better; this is a 1/x weight\n    this.preyCamoflage = 0.5; // weight on the 'gravitational field' for each prey; lower is less detectable\n    this.preyReproductionPeriod = 10000; // ms\n    this.preyCarryingCapacity = 200; // maximum number of prey\n    this.fieldNetSize = 10; // grid size of the gravitational field; Must be smaller than both radii/sqrt(2)!\n  }\n\n  // normalize params for Predators / PredatorsController\n  predatorsParams() {\n    return {\n      count: this.predatorCount,\n      predatorParams: {\n        speed: this.predatorSpeed,\n        radius: this.predatorRadius,\n        color: this.predatorColor,\n        efficiency: this.predatorEfficiency,\n        perception: this.predatorPerception\n      },\n      reproductionPeriod: this.predatorReproductionPeriod\n    };\n  }\n\n  // normalize params for Preys / PreysController\n  preysParams() {\n    return {\n      count: this.preyCount,\n      preyParams: {\n        speed: this.preySpeed,\n        radius: this.preyRadius,\n        color: this.preyColor,\n        perception: this.preyPerception\n      },\n      reproductionPeriod: this.preyReproductionPeriod,\n      carryingCapacity: this.preyCarryingCapacity\n    };\n  }\n\n  // normalize params for PredatorsField\n  predatorFieldParams() {\n    return {\n      fieldNetSize: this.fieldNetSize,\n      gravitationNbhd: this.predatorGravitationNbhd\n    };\n  }\n\n  // normalize params for PreysField\n  preyFieldParams() {\n    return {\n      fieldNetSize: this.fieldNetSize,\n      gravitationNbhd: Math.round(this.preyGravitationNbhd * this.preyCamoflage)\n    };\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/simulation_params.js\n// module id = 7\n// module chunks = 0","'use strict';\nimport capitalize from 'lodash/capitalize';\n\n// This file manages listeners for the parameter sliders on the webpage\n// It updates the SimulationParams when a user makes changes\n\n// Select all the sliders through DOM\nconst sliderEls = {\n  predatorsSliders: {\n    count: document.getElementById(\"predator-count\"),\n    speed: document.getElementById(\"predator-speed\"),\n    perception: document.getElementById(\"predator-perception\"),\n    efficiency: document.getElementById(\"predator-efficiency\"),\n    reproduction: document.getElementById(\"predator-reproduction\")\n  },\n  preysSliders: {\n    count: document.getElementById(\"prey-count\"),\n    speed: document.getElementById(\"prey-speed\"),\n    camoflage: document.getElementById(\"prey-camoflage\"),\n    capacity: document.getElementById(\"prey-capacity\"),\n    reproduction: document.getElementById(\"prey-reproduction\")\n  },\n  controls: {\n    play: document.getElementById(\"play-button\"),\n    pause: document.getElementById(\"pause-button\"),\n    restart: document.getElementById(\"restart-button\")\n  }\n};\n\n// This class manages event listeners for controlling the simulation and\n// changing its parameters\nexport default class Sliders {\n  constructor(simulation, simulationParams) {\n    this.simulation = simulation;\n    this.simulationParams = simulationParams;\n    this.initializeEventListeners(sliderEls);\n    this.isPlaying = true;\n  }\n\n  initializeEventListeners({predatorsSliders, preysSliders, controls}) {\n    this.initializePredatorsEventListeners(predatorsSliders);\n    this.initializePreysEventListeners(preysSliders);\n    this.initializeControlsEventListeners(controls);\n  }\n\n  initializeControl(controlGroup, controlName, eventName, callback) {\n    console.log(controlGroup, controlGroup[controlName]);\n    controlGroup[controlName].addEventListener(eventName, callback);\n  }\n\n  initializePredatorsEventListeners(predatorsSliders) {\n    Object.keys(predatorsSliders).forEach(controlName => {\n      this.initializeControl(predatorsSliders, controlName, 'mouseup', e => {\n        // custom logic for transforming the user input to a parameter\n        if (controlName === \"perception\") {\n          // lower perception values are better\n          // (they are an inverse-distance weight)\n          this.simulationParams['predator' + capitalize(controlName)] =\n            25 - e.target.value;\n        } else {\n          // in most cases, the slider's value is the exact parameter value\n          this.simulationParams['predator' + capitalize(controlName)] =\n            e.target.value;\n        }\n        // propogate updated parameters to the models\n        this.updateOrganisms();\n      });\n    });\n  }\n\n  initializePreysEventListeners(preysSliders) {\n    preysSliders.count.addEventListener('mouseup', e => {\n      this.simulationParams.preyCount = e.target.value;\n    });\n    preysSliders.speed.addEventListener('mouseup', e => {\n      this.simulationParams.preySpeed = e.target.value;\n      this.updateOrganisms();\n    });\n    preysSliders.camoflage.addEventListener('mouseup', e => {\n      this.simulationParams.preyCamoflage = e.target.value / 100;\n      this.updatePreysField();\n    });\n    preysSliders.capacity.addEventListener('mouseup', e => {\n      this.simulationParams.preyCarryingCapacity = e.target.value;\n      this.updateOrganisms();\n    });\n    preysSliders.reproduction.addEventListener('mouseup', e => {\n      this.simulationParams.preyReproductionPeriod = e.target.value;\n      this.updateOrganisms();\n    });\n  }\n\n  initializeControlsEventListeners(controls) {\n    controls.play.addEventListener('click', e => {\n      this.togglePlaying('play');\n    });\n    controls.pause.addEventListener('click', e => {\n      this.togglePlaying('pause');\n    });\n    controls.restart.addEventListener('click', e => {\n      this.togglePlaying('restart');\n    });\n  }\n\n  updateOrganisms() {\n    // need to transform inputs from the linear slider values\n    // this.simulationParams.predatorPerception =\n    //   25 - this.simulationParams.predatorPerception;\n    this.simulation.updateOrganisms({\n      predatorsParams: this.simulationParams.predatorsParams(),\n      preysParams: this.simulationParams.preysParams()\n    });\n  }\n\n  updatePreysField() {\n    this.simulation.updatePreysField(this.simulationParams.preyFieldParams());\n  }\n\n  togglePlaying(type) {\n    switch (type) {\n      case 'play':\n        if (!this.isPlaying) {\n          this.isPlaying = true;\n          this.simulation.togglePlaying(true);\n        }\n        break;\n      case 'pause':\n        this.isPlaying = false;\n        this.simulation.togglePlaying(false);\n        break;\n      case 'restart':\n        this.isPlaying = true;\n        this.simulation.restart();\n        break;\n    }\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/sliders.js\n// module id = 8\n// module chunks = 0","var toString = require('./toString'),\n    upperFirst = require('./upperFirst');\n\n/**\n * Converts the first character of `string` to upper case and the remaining\n * to lower case.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to capitalize.\n * @returns {string} Returns the capitalized string.\n * @example\n *\n * _.capitalize('FRED');\n * // => 'Fred'\n */\nfunction capitalize(string) {\n  return upperFirst(toString(string).toLowerCase());\n}\n\nmodule.exports = capitalize;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lodash/capitalize.js\n// module id = 9\n// module chunks = 0","var Symbol = require('./_Symbol'),\n    arrayMap = require('./_arrayMap'),\n    isArray = require('./isArray'),\n    isSymbol = require('./isSymbol');\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolToString = symbolProto ? symbolProto.toString : undefined;\n\n/**\n * The base implementation of `_.toString` which doesn't convert nullish\n * values to empty strings.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n */\nfunction baseToString(value) {\n  // Exit early for strings to avoid a performance hit in some environments.\n  if (typeof value == 'string') {\n    return value;\n  }\n  if (isArray(value)) {\n    // Recursively convert values (susceptible to call stack limits).\n    return arrayMap(value, baseToString) + '';\n  }\n  if (isSymbol(value)) {\n    return symbolToString ? symbolToString.call(value) : '';\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\nmodule.exports = baseToString;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lodash/_baseToString.js\n// module id = 10\n// module chunks = 0","var freeGlobal = require('./_freeGlobal');\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\nmodule.exports = root;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lodash/_root.js\n// module id = 11\n// module chunks = 0","/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\nmodule.exports = freeGlobal;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lodash/_freeGlobal.js\n// module id = 12\n// module chunks = 0","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\n} catch(e) {\n\t// This works if the window reference is available\n\tif(typeof window === \"object\")\n\t\tg = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/global.js\n// module id = 13\n// module chunks = 0","/**\n * A specialized version of `_.map` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n */\nfunction arrayMap(array, iteratee) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      result = Array(length);\n\n  while (++index < length) {\n    result[index] = iteratee(array[index], index, array);\n  }\n  return result;\n}\n\nmodule.exports = arrayMap;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lodash/_arrayMap.js\n// module id = 14\n// module chunks = 0","/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\nmodule.exports = isArray;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lodash/isArray.js\n// module id = 15\n// module chunks = 0","var baseGetTag = require('./_baseGetTag'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && baseGetTag(value) == symbolTag);\n}\n\nmodule.exports = isSymbol;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lodash/isSymbol.js\n// module id = 16\n// module chunks = 0","var Symbol = require('./_Symbol'),\n    getRawTag = require('./_getRawTag'),\n    objectToString = require('./_objectToString');\n\n/** `Object#toString` result references. */\nvar nullTag = '[object Null]',\n    undefinedTag = '[object Undefined]';\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n  return (symToStringTag && symToStringTag in Object(value))\n    ? getRawTag(value)\n    : objectToString(value);\n}\n\nmodule.exports = baseGetTag;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lodash/_baseGetTag.js\n// module id = 17\n// module chunks = 0","var Symbol = require('./_Symbol');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n  return result;\n}\n\nmodule.exports = getRawTag;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lodash/_getRawTag.js\n// module id = 18\n// module chunks = 0","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\nmodule.exports = objectToString;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lodash/_objectToString.js\n// module id = 19\n// module chunks = 0","/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\nmodule.exports = isObjectLike;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lodash/isObjectLike.js\n// module id = 20\n// module chunks = 0","var createCaseFirst = require('./_createCaseFirst');\n\n/**\n * Converts the first character of `string` to upper case.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category String\n * @param {string} [string=''] The string to convert.\n * @returns {string} Returns the converted string.\n * @example\n *\n * _.upperFirst('fred');\n * // => 'Fred'\n *\n * _.upperFirst('FRED');\n * // => 'FRED'\n */\nvar upperFirst = createCaseFirst('toUpperCase');\n\nmodule.exports = upperFirst;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lodash/upperFirst.js\n// module id = 21\n// module chunks = 0","var castSlice = require('./_castSlice'),\n    hasUnicode = require('./_hasUnicode'),\n    stringToArray = require('./_stringToArray'),\n    toString = require('./toString');\n\n/**\n * Creates a function like `_.lowerFirst`.\n *\n * @private\n * @param {string} methodName The name of the `String` case method to use.\n * @returns {Function} Returns the new case function.\n */\nfunction createCaseFirst(methodName) {\n  return function(string) {\n    string = toString(string);\n\n    var strSymbols = hasUnicode(string)\n      ? stringToArray(string)\n      : undefined;\n\n    var chr = strSymbols\n      ? strSymbols[0]\n      : string.charAt(0);\n\n    var trailing = strSymbols\n      ? castSlice(strSymbols, 1).join('')\n      : string.slice(1);\n\n    return chr[methodName]() + trailing;\n  };\n}\n\nmodule.exports = createCaseFirst;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lodash/_createCaseFirst.js\n// module id = 22\n// module chunks = 0","var baseSlice = require('./_baseSlice');\n\n/**\n * Casts `array` to a slice if it's needed.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {number} start The start position.\n * @param {number} [end=array.length] The end position.\n * @returns {Array} Returns the cast slice.\n */\nfunction castSlice(array, start, end) {\n  var length = array.length;\n  end = end === undefined ? length : end;\n  return (!start && end >= length) ? array : baseSlice(array, start, end);\n}\n\nmodule.exports = castSlice;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lodash/_castSlice.js\n// module id = 23\n// module chunks = 0","/**\n * The base implementation of `_.slice` without an iteratee call guard.\n *\n * @private\n * @param {Array} array The array to slice.\n * @param {number} [start=0] The start position.\n * @param {number} [end=array.length] The end position.\n * @returns {Array} Returns the slice of `array`.\n */\nfunction baseSlice(array, start, end) {\n  var index = -1,\n      length = array.length;\n\n  if (start < 0) {\n    start = -start > length ? 0 : (length + start);\n  }\n  end = end > length ? length : end;\n  if (end < 0) {\n    end += length;\n  }\n  length = start > end ? 0 : ((end - start) >>> 0);\n  start >>>= 0;\n\n  var result = Array(length);\n  while (++index < length) {\n    result[index] = array[index + start];\n  }\n  return result;\n}\n\nmodule.exports = baseSlice;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lodash/_baseSlice.js\n// module id = 24\n// module chunks = 0","var asciiToArray = require('./_asciiToArray'),\n    hasUnicode = require('./_hasUnicode'),\n    unicodeToArray = require('./_unicodeToArray');\n\n/**\n * Converts `string` to an array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the converted array.\n */\nfunction stringToArray(string) {\n  return hasUnicode(string)\n    ? unicodeToArray(string)\n    : asciiToArray(string);\n}\n\nmodule.exports = stringToArray;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lodash/_stringToArray.js\n// module id = 25\n// module chunks = 0","/**\n * Converts an ASCII `string` to an array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the converted array.\n */\nfunction asciiToArray(string) {\n  return string.split('');\n}\n\nmodule.exports = asciiToArray;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lodash/_asciiToArray.js\n// module id = 26\n// module chunks = 0","/** Used to compose unicode character classes. */\nvar rsAstralRange = '\\\\ud800-\\\\udfff',\n    rsComboMarksRange = '\\\\u0300-\\\\u036f',\n    reComboHalfMarksRange = '\\\\ufe20-\\\\ufe2f',\n    rsComboSymbolsRange = '\\\\u20d0-\\\\u20ff',\n    rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,\n    rsVarRange = '\\\\ufe0e\\\\ufe0f';\n\n/** Used to compose unicode capture groups. */\nvar rsAstral = '[' + rsAstralRange + ']',\n    rsCombo = '[' + rsComboRange + ']',\n    rsFitz = '\\\\ud83c[\\\\udffb-\\\\udfff]',\n    rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',\n    rsNonAstral = '[^' + rsAstralRange + ']',\n    rsRegional = '(?:\\\\ud83c[\\\\udde6-\\\\uddff]){2}',\n    rsSurrPair = '[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff]',\n    rsZWJ = '\\\\u200d';\n\n/** Used to compose unicode regexes. */\nvar reOptMod = rsModifier + '?',\n    rsOptVar = '[' + rsVarRange + ']?',\n    rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',\n    rsSeq = rsOptVar + reOptMod + rsOptJoin,\n    rsSymbol = '(?:' + [rsNonAstral + rsCombo + '?', rsCombo, rsRegional, rsSurrPair, rsAstral].join('|') + ')';\n\n/** Used to match [string symbols](https://mathiasbynens.be/notes/javascript-unicode). */\nvar reUnicode = RegExp(rsFitz + '(?=' + rsFitz + ')|' + rsSymbol + rsSeq, 'g');\n\n/**\n * Converts a Unicode `string` to an array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the converted array.\n */\nfunction unicodeToArray(string) {\n  return string.match(reUnicode) || [];\n}\n\nmodule.exports = unicodeToArray;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lodash/_unicodeToArray.js\n// module id = 27\n// module chunks = 0","'use strict';\n\nimport Panorama from './panorama';\nimport Zoo from './zoo';\nimport Graph from './graph';\n\nexport default class Simulation {\n  constructor(canvas, graphCanvas, simulationParams) {\n    this.simulationParams = simulationParams;\n    this.canvas = canvas;\n    this.graphCanvas = graphCanvas;\n    this.graph = new Graph(graphCanvas, simulationParams);\n    this.panorama = new Panorama(this.canvas);\n    this.zoo = new Zoo(this.simulationParams.predatorsParams(),\n                       this.simulationParams.preysParams(),\n                       this.simulationParams.predatorFieldParams(),\n                       this.simulationParams.preyFieldParams(),\n                       this.panorama.panoramaSize);\n    this.animationInterval = 1000 / 24; // i.e. 24 fps throttle\n  }\n\n  tick(timestamp) {\n    this.ticker = window.requestAnimationFrame(this.tick.bind(this));\n\n    const now = Date.now();\n    const elapsed = now - this.nextRender;\n\n    if (elapsed > this.animationInterval) {\n      this.nextRender = now;\n\n      this.panorama.updateDx();\n      this.zoo.tick();\n      this.panorama.draw(this.zoo);\n      this.graph.draw(this.zoo);\n    }\n  }\n\n  begin() {\n    this.nextRender = Date.now();\n    this.tick();\n  }\n\n  togglePlaying(bool) {\n    if (bool) {\n      this.pauseTimestamp = this.pauseTimestamp || Date.now();\n      this.zoo.unpause(this.pauseTimestamp);\n      delete this.pauseTimestamp;\n      this.begin();\n    } else {\n      this.pauseTimestamp = Date.now();\n      window.cancelAnimationFrame(this.ticker);\n    }\n  }\n\n  updateOrganisms(newParams) {\n    this.zoo.updateOrganisms(newParams);\n    this.graph.updateOrganisms(newParams.preysParams);\n  }\n\n  updatePreysField(newParams) {\n    this.zoo.updatePreysField(newParams);\n  }\n\n  restart() {\n    window.cancelAnimationFrame(this.ticker);\n    this.graph = new Graph(this.graphCanvas, this.simulationParams);\n    this.panorama = new Panorama(this.canvas);\n    this.zoo = new Zoo(this.simulationParams.predatorsParams(),\n                       this.simulationParams.preysParams(),\n                       this.simulationParams.predatorFieldParams(),\n                       this.simulationParams.preyFieldParams(),\n                       this.panorama.panoramaSize);\n    this.begin();\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/simulation.js\n// module id = 28\n// module chunks = 0","'use strict';\n\nimport Background from './background';\nimport { positiveMod, getMousePos } from '../util/util';\n\n// handles all logic for the wrapping panorama and drawing all canvas items\n// in particular, tracks offset for drawing based on user scroll\nexport default class Panorama {\n  constructor(canvas) {\n    this.background = new Background(canvas);\n    this.ctx = canvas.getContext('2d');\n    this.panoramaSize = this.background.imageSize;\n    this.canvasSize = this.background.canvasSize;\n\n    this.dx = 0;\n    this.isDampening = false;\n    this.cursorOffsetX = 0;\n\n    this.setCanvasListeners(canvas);\n  }\n\n  // loadAssets() {\n  //   let loaded = false;\n  //   this.background.\n  // }\n\n  draw(zoo) {\n    if (this.background.loaded) {\n      this.background.draw(this.dx);\n      this.drawOrganisms(zoo.preysController);\n      this.drawOrganisms(zoo.predatorsController);\n    }\n  }\n\n  drawOrganisms(controller) {\n    controller.organisms.forEach( organism => {\n      this.drawOrganism(organism);\n    });\n  }\n\n  drawOrganism(organism) {\n    this.ctx.beginPath();\n    this.ctx.arc(positiveMod(organism.center.x - this.dx, this.panoramaSize.width),\n                 organism.center.y, organism.radius, 0, 2 * Math.PI);\n    this.ctx.fillStyle = organism.color;\n    this.ctx.strokeStyle = '#476189';\n    this.ctx.fill();\n    this.ctx.lineWidth = 5;\n    this.ctx.stroke();\n  }\n\n  updateDx() {\n    this.dampenStaleCursorInput();\n    this.dx += this.cursorOffsetX * 0.075;\n    this.dx = positiveMod(this.dx, this.panoramaSize.width);\n  }\n\n  toggleDampening(bool) {\n    this.isDampening = bool;\n  }\n\n  dampenStaleCursorInput() {\n    if (this.isDampening) {\n      this.cursorOffsetX = this.cursorOffsetX * 0.8;\n      if (Math.abs(this.cursorOffsetX) < 1) {\n        this.cursorOffsetX = 0;\n      }\n    }\n  }\n\n  updateCursorOffset({x}) {\n    if (Math.abs(this.canvasSize.width / 2 - x) > this.canvasSize.width / 3) {\n      this.toggleDampening(false);\n      this.cursorOffsetX = x - (this.canvasSize.width / 2);\n    } else {\n      this.toggleDampening(true);\n    }\n  }\n\n  setCanvasListeners(canvas) {\n    canvas.addEventListener('mousemove', e => {\n      const mousePos = getMousePos(canvas, e);\n      this.updateCursorOffset(mousePos);\n    });\n\n    canvas.addEventListener('mouseout', () => {\n      this.toggleDampening(true);\n    });\n  }\n\n\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/panorama.js\n// module id = 29\n// module chunks = 0","'use strict';\n\nconst backgroundPath = 'https://s3-us-west-1.amazonaws.com/talons-dev/final-background-cropped.jpeg';\n\nexport default class Background {\n  // eventually refactor into background and panorama classes\n  constructor(canvas) {\n    this.ctx = canvas.getContext('2d');\n    this.img = new Image(3000, 750);\n    this.img.onload = () => { this.loaded = true; };\n    this.img.src = backgroundPath;\n    this.loaded = false;\n    this.imageSize = {\n      width: this.img.width,\n      height: this.img.height\n    };\n    console.log(this.imageSize);\n    this.canvasSize = {\n      width: canvas.width,\n      height: canvas.height\n    };\n  }\n\n  draw(dx) {\n    this.ctx.drawImage(this.img, -dx, 0);\n    // only perform second draw of stitched image when necessary\n    if (this.doesImageNeedStitching(dx)) {\n      this.ctx.drawImage(this.img, this.imageSize.width - dx, 0);\n    }\n  }\n\n  doesImageNeedStitching(dx) {\n    return dx > (this.imageSize.width - this.canvasSize.width);\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/background.js\n// module id = 30\n// module chunks = 0","'use strict';\n\nimport PredatorsController from './predators_controller';\nimport PreysController from './preys_controller';\nimport Field from './field';\n\nexport default class Zoo {\n  constructor(predatorsParams, preysParams,\n              predatorFieldParams, preyFieldParams, panoramaSize) {\n    this.panoramaSize = panoramaSize;\n    this.predatorsController = new PredatorsController(predatorsParams, panoramaSize);\n    this.preysController = new PreysController(preysParams, panoramaSize);\n    this.predatorsField = new Field(predatorFieldParams, panoramaSize, -1);\n    this.preysField = new Field(preyFieldParams, panoramaSize, 1);\n  }\n\n  updateOrganisms({predatorsParams, preysParams}) {\n    this.predatorsController.updatePredatorsParams(predatorsParams);\n    this.preysController.updatePreysParams(preysParams);\n  }\n\n  updatePreysField(preyFieldParams) {\n    this.preysField.updateFieldParams(preyFieldParams);\n  }\n\n  tick() {\n    this.feed();\n    this.starve();\n    this.calculateFields();\n    this.moveOrganisms();\n    this.reproduce();\n  }\n\n  moveOrganisms() {\n    this.movePredators();\n    this.movePrey();\n  }\n\n  movePredators() {\n    this.predatorsController.moveOrganisms(this.panoramaSize, this.preysField);\n  }\n\n  movePrey() {\n    this.preysController.moveOrganisms(this.panoramaSize, this.predatorsField);\n  }\n\n  calculateFields() {\n    this.calculatePredatorsField();\n    this.calculatePreysField();\n  }\n\n  calculatePredatorsField() {\n    this.predatorsField.calculateField(this.predatorsController);\n  }\n\n  calculatePreysField() {\n    this.preysField.calculateField(this.preysController);\n  }\n\n  // construct a hash of preys' locations on the field grid, with\n  // coords pointing to the top prey on a given tile (O(preys) time)\n  // Then, each predator can check the hash at its own location to\n  // find food (O(predators) time). Total: O(predators + preys)\n  feed() {\n    const preysLocations = this.calculatePreysLocations();\n    const eaten = this.predatorsController.feed(preysLocations, this.preysField.fieldNetSize);\n    this.preysController.killOrganisms(eaten);\n  }\n\n  calculatePreysLocations() {\n    return this.preysController.revealLocations(this.preysField.fieldNetSize);\n  }\n\n  starve() {\n    this.predatorsController.starvePredators();\n    this.preysController.starvePreys();\n  }\n\n  reproduce() {\n    if (!this.unpauseTimestamp) {\n      this.predatorsController.reproducePredators(this.panoramaSize);\n      this.preysController.reproducePreys(this.panoramaSize);\n    } else if (Date.now() > this.unpauseTimestamp) {\n      delete this.unpauseTimestamp;\n    }\n  }\n\n  unpause(pauseTimestamp) {\n    this.unpauseTimestamp = 2 * Date.now() - pauseTimestamp;\n    this.predatorsController.unpause(pauseTimestamp);\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/zoo.js\n// module id = 31\n// module chunks = 0","'use strict';\n\nimport Predator from './predator';\nimport OrganismsController from './organisms_controller';\nimport { fieldCellCoords } from '../util/util';\n\nexport default class PredatorsController extends OrganismsController {\n  constructor({predatorParams, count, reproductionPeriod}, panoramaSize) {\n    super(reproductionPeriod);\n    this.predatorParams = predatorParams;\n    this.populatePredators({predatorParams, count}, panoramaSize);\n  }\n\n  populatePredators({count, predatorParams}, panoramaSize) {\n    for (let i = 0; i < count; i++) {\n      this.createPredator(predatorParams, panoramaSize);\n    }\n  }\n\n  createPredator(predatorParams, panoramaSize) {\n    const predator = new Predator(predatorParams, panoramaSize);\n    this.organisms.push(predator);\n  }\n\n  feed(preysLocations, fieldNetSize) {\n    const eaten = [];\n    this.organisms.forEach( predator => {\n      const predatorCoords = fieldCellCoords(predator.center, fieldNetSize);\n      const food = preysLocations[predatorCoords.x] ?\n        preysLocations[predatorCoords.x][predatorCoords.y] : null;\n      if (food) {\n        eaten.push(food);\n        predator.feed();\n      }\n    });\n    return Array.from(new Set(eaten));\n  }\n\n  starvePredators() {\n    const starved = [];\n    const currentTime = Date.now();\n    this.organisms.forEach( predator => {\n      if (currentTime - predator.lastAte > predator.efficiency) {\n        starved.push(predator);\n      }\n    });\n    this.killOrganisms(starved);\n  }\n\n  reproducePredators(panoramaSize) {\n    if (Date.now() - this.lastReproduced > this.reproductionPeriod) {\n      const populateParams = {\n        count: this.organisms.length,\n        predatorParams: this.predatorParams\n      };\n      this.populatePredators(populateParams, panoramaSize);\n      this.lastReproduced = Date.now();\n    }\n  }\n\n  updatePredatorsParams({predatorParams, reproductionPeriod}) {\n    this.predatorParams = predatorParams;\n    this.reproductionPeriod = reproductionPeriod;\n    this.organisms.forEach( predator => {\n      predator.updatePredatorParams(predatorParams);\n    });\n  }\n\n  unpause(pauseTimestamp) {\n    const elapsedTime = Date.now() - pauseTimestamp;\n    this.organisms.forEach(organism => organism.unpause(elapsedTime));\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/predators_controller.js\n// module id = 32\n// module chunks = 0","'use strict';\n\nimport Organism from './organism';\n\nexport default class Predator extends Organism {\n  constructor(predatorParams, panoramaSize) {\n    super(predatorParams, panoramaSize);\n    this.lastAte = Date.now();\n    this.efficiency = predatorParams.efficiency;\n  }\n\n  // allow for parameters to be changed after the initialization\n  // (e.g. based on user input on the slider)\n  updatePredatorParams({speed, efficiency, perception}) {\n    this.speed = speed;\n    this.efficiency = efficiency;\n    this.perception = perception;\n  }\n\n  // resets the countdown to starvation\n  feed(preys) {\n    this.lastAte = Date.now();\n  }\n\n  unpause(elapsedTime) {\n    this.lastAte += elapsedTime;\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/predator.js\n// module id = 33\n// module chunks = 0","'use strict';\n\nimport Prey from './prey';\nimport OrganismsController from './organisms_controller';\nimport { fieldCellCoords } from '../util/util';\n\nexport default class PreysController extends OrganismsController {\n  constructor({preyParams, count, reproductionPeriod, carryingCapacity},\n              panoramaSize) {\n    super(reproductionPeriod);\n    this.preyParams = preyParams;\n    this.carryingCapacity = carryingCapacity;\n    this.populatePreys({count, preyParams}, panoramaSize);\n  }\n\n  populatePreys({count, preyParams}, panoramaSize) {\n    for (let i = 0; i < count; i++) {\n      this.createPrey(preyParams, panoramaSize);\n    }\n  }\n\n  createPrey(preyParams, panoramaSize) {\n    const prey = new Prey(preyParams, panoramaSize);\n    this.organisms.push(prey);\n  }\n\n  revealLocations(fieldNetSize) {\n    const locations = {};\n    this.organisms.forEach( prey => {\n      const preyCoords = fieldCellCoords(prey.center, fieldNetSize);\n      locations[preyCoords.x] = locations[preyCoords.x] || [];\n      locations[preyCoords.x][preyCoords.y] = prey;\n    });\n    return locations;\n  }\n\n  reproducePreys(panoramaSize) {\n    if (Date.now() - this.lastReproduced > this.reproductionPeriod) {\n      const populateParams = {\n        count: this.organisms.length,\n        preyParams: this.preyParams\n      };\n      this.populatePreys(populateParams, panoramaSize);\n      this.lastReproduced = Date.now();\n    }\n  }\n\n  starvePreys() {\n    if (this.organisms.length > this.carryingCapacity) {\n      const middleIdx = Math.floor(this.organisms.length / 2);\n      this.organisms = this.organisms.slice(middleIdx);\n    }\n  }\n\n  updatePreysParams({preyParams, reproductionPeriod, carryingCapacity}) {\n    this.preyParams = preyParams;\n    this.reproductionPeriod = reproductionPeriod;\n    this.carryingCapacity = carryingCapacity;\n    this.organisms.forEach( prey => {\n      prey.updatePreyParams(preyParams);\n    });\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/preys_controller.js\n// module id = 34\n// module chunks = 0","'use strict';\n\nimport Organism from './organism';\n\nexport default class Prey extends Organism {\n  constructor(preyParams, panoramaSize) {\n    super(preyParams, panoramaSize);\n  }\n\n  // allow for parameters to be changed after the initialization\n  // (e.g. based on user input on the slider)\n  updatePreyParams({speed}) {\n    this.speed = speed;\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/prey.js\n// module id = 35\n// module chunks = 0","'use strict';\n\nimport { distanceY, distanceX, distance,\n         fieldCellCoords, positiveMod, gravitation } from '../util/util';\n\nexport default class Field {\n  constructor({fieldNetSize, gravitationNbhd}, {height, width}, sgn) {\n    this.fieldSize = {\n      rowCount: Math.ceil(height / fieldNetSize),\n      colCount: Math.ceil(width / fieldNetSize)\n    };\n    this.fieldNetSize = fieldNetSize;\n    this.gravitationNbhd = gravitationNbhd;\n    this.sgn = sgn;\n    this.initializeField(this.fieldSize);\n  }\n\n  initializeField({rowCount, colCount}) {\n    this.field = Array(rowCount).fill(0).map(el => (\n      Array(colCount).fill(0)\n    ));\n  }\n\n  resetField() {\n    const rowIdxs = Object.keys(this.field);\n    const centerRowIdx = rowIdxs[Math.floor(rowIdxs.length/2)];\n    rowIdxs.forEach( rowIdx => {\n      const colIdxs = Object.keys(this.field[rowIdx]);\n      const distCenterRow = distanceY(centerRowIdx, rowIdx);\n      colIdxs.forEach( colIdx => {\n        // prevent clustering on edges\n        this.field[rowIdx][colIdx] = (distCenterRow / centerRowIdx) / 1000;\n      });\n    });\n  }\n\n  calculateField(organismsController) {\n    this.resetField();\n    organismsController.organisms.forEach( organism => {\n      this.updateField(organism);\n    });\n  }\n\n  updateField(organism) {\n    let x, y;\n    ({x, y} = this.fieldPosition(organism));\n    for (let row = y - this.gravitationNbhd; row < y + this.gravitationNbhd; row++) {\n      for (let col = x - this.gravitationNbhd; col < x + this.gravitationNbhd; col++) {\n        // JS will get mad if you try to change the iterator mid loop.\n        let modCol = col;\n        if (row < 0 || row >= this.fieldSize.rowCount) continue;\n        if (modCol < 0 || modCol >= this.fieldSize.colCount) {\n          modCol = positiveMod(modCol, Math.floor(this.fieldSize.colCount));\n        }\n        const pointVector = this.sgn * gravitation(distance(x, y, modCol, row, this.fieldSize.colCount));\n        this.field[row][modCol] += pointVector;\n      }\n    }\n  }\n\n  fieldPosition(organism) {\n    return fieldCellCoords(organism.center, this.fieldNetSize);\n  }\n\n  // use the field of other organisms to construct a gradient for an organism\n  constructGradient(organism) {\n    let x, y;\n    ({x, y} = this.fieldPosition(organism));\n    const gradient = {\n      x: 0,\n      y: 0\n    };\n    for (let row = y - this.gravitationNbhd; row < y + this.gravitationNbhd; row++) {\n      for (let col = x - this.gravitationNbhd; col < x + this.gravitationNbhd; col++) {\n        let modCol = col;\n        if (row < 0 || row >= this.fieldSize.rowCount) continue;\n        if (col === x || row === y) continue;\n        modCol = positiveMod(modCol, this.fieldSize.colCount);\n        const dist = distance(col, row, x, y, this.fieldSize.colCount);\n        const weight = gravitation(dist);\n        const xDist = distanceX(x, modCol, this.fieldSize.rowCount);\n        const yDist = distanceY(y, row);\n        const sin = yDist / dist;\n        const cos = xDist / dist;\n        const sgnX = (col > x) ? 1 : -1 ;\n        const sgnY = (row > y) ? 1 : -1 ;\n        gradient.x += this.field[row][modCol] * cos * weight * sgnX;\n        gradient.y += this.field[row][modCol] * sin * weight * sgnY;\n      }\n    }\n    return gradient;\n  }\n\n  updateFieldParams({fieldNetSize, gravitationNbhd}) {\n    this.fieldNetSize = fieldNetSize;\n    this.gravitationNbhd = gravitationNbhd;\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/field.js\n// module id = 36\n// module chunks = 0","import { fitToAxis } from '../util/util';\n\nexport default class Graph {\n  constructor(graphCanvas, simulationParams) {\n    this.graphCanvas = graphCanvas;\n    this.canvasSize = {\n      x: graphCanvas.width,\n      y: graphCanvas.height\n    };\n    this.ctx = graphCanvas.getContext('2d');\n    this.carryingCapacity = simulationParams.preyCarryingCapacity;\n    this.lastCoords = [{\n      predatorsCount: simulationParams.predatorCount,\n      preysCount: simulationParams.preyCount\n    }];\n    this.lastDraw = Date.now();\n    this.predatorColor = simulationParams.predatorColor;\n    this.preyColor = simulationParams.preyColor;\n  }\n\n  draw(zoo) {\n    if (Date.now() - this.lastDraw > 1000) {\n      this.updateDatapoints(zoo);\n      this.ctx.clearRect(0, 0, this.canvasSize.x, this.canvasSize.y);\n      this.drawData();\n      this.drawAxes();\n      this.lastDraw = Date.now();\n    }\n  }\n\n  updateDatapoints(zoo) {\n    const predatorsCount = zoo.predatorsController.organisms.length;\n    const preysCount = zoo.preysController.organisms.length;\n    this.lastCoords.push({\n      predatorsCount,\n      preysCount\n    });\n    if (this.lastCoords.length > 100) {\n      this.lastCoords = this.lastCoords.slice(1);\n    }\n  }\n\n  drawData() {\n    this.drawPredatorData();\n    this.drawPreyData();\n  }\n\n  drawPredatorData() {\n    const xIncrement = Math.floor(this.canvasSize.x / 100);\n    let xCoord = 0;\n    this.ctx.strokeStyle = this.predatorColor;\n    this.ctx.lineWidth = 2;\n    this.ctx.beginPath();\n    this.ctx.moveTo(xCoord,\n      this.canvasSize.y - fitToAxis(this.lastCoords[0].predatorsCount,\n        this.carryingCapacity, this.canvasSize.y));\n    xCoord += xIncrement;\n    this.lastCoords.slice(1).forEach((coord, idx) => {\n      this.ctx.lineTo(xCoord, this.canvasSize.y - fitToAxis(coord.predatorsCount,\n          this.carryingCapacity, this.canvasSize.y));\n      this.ctx.stroke();\n      xCoord += xIncrement;\n    });\n  }\n\n  drawPreyData() {\n    const xIncrement = Math.floor(this.canvasSize.x / 100);\n    let xCoord = 0;\n    this.ctx.strokeStyle = this.preyColor;\n    this.ctx.lineWidth = 2;\n    this.ctx.beginPath();\n    this.ctx.moveTo(xCoord,\n      this.canvasSize.y - fitToAxis(this.lastCoords[0].preysCount,\n        this.carryingCapacity, this.canvasSize.y));\n        // debugger;\n    xCoord += xIncrement;\n    this.lastCoords.slice(1).forEach((coord, idx) => {\n      this.ctx.lineTo(xCoord, this.canvasSize.y - fitToAxis(coord.preysCount,\n          this.carryingCapacity, this.canvasSize.y));\n      this.ctx.stroke();\n      xCoord += xIncrement;\n    });\n  }\n\n  drawAxes() {\n    this.ctx.strokeStyle = '#ffffff';\n    this.ctx.lineWidth = 2;\n\n    // x-axis\n    this.ctx.beginPath();\n    this.ctx.moveTo(0, this.canvasSize.y-1);\n    this.ctx.lineTo(this.canvasSize.x, this.canvasSize.y-1);\n    this.ctx.stroke();\n\n    // y-axis\n    this.ctx.beginPath();\n    this.ctx.moveTo(1, 0);\n    this.ctx.lineTo(1, this.canvasSize.y);\n    this.ctx.stroke();\n  }\n\n  updateOrganisms({carryingCapacity}) {\n    this.carryingCapacity = carryingCapacity;\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/graph.js\n// module id = 37\n// module chunks = 0"],"sourceRoot":""}